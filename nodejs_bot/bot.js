// nodejs_bot/bot.js

const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');
const path = require('path');

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
const PYTHON_API_URL = 'http://127.0.0.1:18361/video_data';
const TOKEN_PATH = path.join(__dirname, 'token.txt');

// --- –°–ª–æ–≤–∞—Ä—å-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ –¥–ª—è —Å—Ç—Ä–∞–Ω ---
const countryCodes = {
    'JP': '–Ø–ø–æ–Ω–∏—è', 'US': '–°–®–ê', 'RU': '–†–æ—Å—Å–∏—è', 'UA': '–£–∫—Ä–∞–∏–Ω–∞', 'BY': '–ë–µ–ª–∞—Ä—É—Å—å',
    'KZ': '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'KR': '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è', 'DE': '–ì–µ—Ä–º–∞–Ω–∏—è', 'FR': '–§—Ä–∞–Ω—Ü–∏—è',
    'GB': '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', 'BR': '–ë—Ä–∞–∑–∏–ª–∏—è', 'ID': '–ò–Ω–¥–æ–Ω–µ–∑–∏—è', 'VN': '–í—å–µ—Ç–Ω–∞–º',
    'TH': '–¢–∞–∏–ª–∞–Ω–¥', 'TR': '–¢—É—Ä—Ü–∏—è', 'PH': '–§–∏–ª–∏–ø–ø–∏–Ω—ã', 'PL': '–ü–æ–ª—å—à–∞',
    'IT': '–ò—Ç–∞–ª–∏—è', 'ES': '–ò—Å–ø–∞–Ω–∏—è', 'CA': '–ö–∞–Ω–∞–¥–∞', 'MX': '–ú–µ–∫—Å–∏–∫–∞',
};
const getCountryName = (code) => {
    if (!code) return null;
    return countryCodes[code.toUpperCase()] || code;
};

// --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
const log = (message) => {
    console.log(`[${new Date().toLocaleString('ru-RU')}] ${message}`);
};

// --- –ß—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ ---
if (!fs.existsSync(TOKEN_PATH)) {
    log('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –§–∞–π–ª token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    process.exit(1);
}
const token = fs.readFileSync(TOKEN_PATH, 'utf8').trim();
if (!token) {
    log('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –§–∞–π–ª token.txt –ø—É—Å—Ç!');
    process.exit(1);
}

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
const bot = new TelegramBot(token, { polling: true });
log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');

// --- –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –°–°–´–õ–û–ö –ù–ê –í–ò–î–ï–û ---
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    if (!text || text.startsWith('/')) return;

    const tiktokUrlRegex = /(https?:\/\/(?:www\.)?(?:m|vt|vm)\.tiktok\.com\/[^\s]+)/;
    const match = text.match(tiktokUrlRegex);

    if (match && match[0]) {
        const tiktokUrl = match[0];
        log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Å—ã–ª–∫–∞: ${tiktokUrl} –≤ —á–∞—Ç–µ ${chatId}`);

        const waitingMessage = await bot.sendMessage(chatId, '‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É...', {
            reply_to_message_id: msg.message_id
        });

        try {
            const response = await axios.get(PYTHON_API_URL, {
                params: { original_url: tiktokUrl },
                timeout: 120000
            });

            const { metadata, videoBase64 } = response.data;
            log(`–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç API –¥–ª—è —á–∞—Ç–∞ ${chatId}`);

            const stats = metadata.statistics;
            const videoDetails = metadata.video_details;
            const authorStats = metadata.authorStats;
            const shazam = metadata.shazam;

            let caption = `üë§ <b>–ê–≤—Ç–æ—Ä:</b> <a href="https://www.tiktok.com/@${metadata.author.uniqueId}">@${metadata.author.uniqueId}</a>`;
            if (metadata.author.verified) caption += ` ‚úîÔ∏è`;
            caption += `\n`;

            if (authorStats) {
                caption += `üë• <b>–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:</b> ${authorStats.followerCount?.toLocaleString('ru-RU') || 0}\n`;
                caption += `‚ù§Ô∏è <b>–í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤:</b> ${authorStats.heartCount?.toLocaleString('ru-RU') || 0}\n`;
            }
            const regionName = getCountryName(metadata.region);
            if (regionName) caption += `üìç <b>–†–µ–≥–∏–æ–Ω:</b> ${regionName}\n`;
            caption += '\n';

            if (metadata.description) caption += `üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n${metadata.description}\n\n`;
            if (metadata.hashtags && metadata.hashtags.length > 0) {
                 caption += `üè∑Ô∏è <b>–•–µ—à—Ç–µ–≥–∏:</b> ${metadata.hashtags.join(' ')}\n\n`;
            }

            caption += `üéµ <b>–ú—É–∑—ã–∫–∞:</b> ${metadata.music.title}\n`;
            if (shazam && shazam.title) caption += `üéß <b>Shazam:</b> ${shazam.artist} - ${shazam.title}\n`;
            caption += `\n`;

            caption += `üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–¥–µ–æ:</b>\n`;
            caption += `  ‚ù§Ô∏è –õ–∞–π–∫–∏: ${stats.diggCount?.toLocaleString('ru-RU') || 0}\n`;
            caption += `  üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${stats.commentCount?.toLocaleString('ru-RU') || 0}\n`;
            caption += `  üîÅ –†–µ–ø–æ—Å—Ç—ã: ${stats.shareCount?.toLocaleString('ru-RU') || 0}\n`;
            caption += `  ‚ñ∂Ô∏è –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${stats.playCount?.toLocaleString('ru-RU') || 0}\n\n`;

            caption += `‚öôÔ∏è <b>–î–µ—Ç–∞–ª–∏ –≤–∏–¥–µ–æ:</b>\n`;
            caption += `  –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${videoDetails.resolution}\n`;
            caption += `  FPS: ${videoDetails.fps}\n`;
            caption += `  –†–∞–∑–º–µ—Ä: ${videoDetails.size_mb}\n`;
            if (metadata.video_duration) caption += `  ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${metadata.video_duration} —Å–µ–∫.\n`;
            
            if (metadata.createTime) {
                const date = new Date(metadata.createTime * 1000);
                caption += `  üìÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: ${date.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}\n`;
            }
            if (metadata.isDuet) caption += `  üîó –≠—Ç–æ –¥—É—ç—Ç\n`;
            if (metadata.isStitch) caption += `  ‚úÇÔ∏è –°—à–∏—Ç–æ —Å –¥—Ä—É–≥–∏–º –≤–∏–¥–µ–æ\n`;

            const videoBuffer = Buffer.from(videoBase64, 'base64');
            await bot.sendVideo(chatId, videoBuffer, { caption: caption, parse_mode: 'HTML' });
            await bot.deleteMessage(chatId, waitingMessage.message_id);
            log(`–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`);

        } catch (error) {
            log(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
            let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. üò•';

            if (error.response) {
                log(`–û—à–∏–±–∫–∞ –æ—Ç API: ${JSON.stringify(error.response.data, null, 2)}`);
                errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ. üò•';
            } else {
                log(`–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ —Ç–∞–π–º-–∞—É—Ç: ${error.message}`);
                errorMessage = '–°–µ—Ä–≤–µ—Ä —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
            }
            await bot.editMessageText(errorMessage, { chat_id: chatId, message_id: waitingMessage.message_id });
        }
    }
});