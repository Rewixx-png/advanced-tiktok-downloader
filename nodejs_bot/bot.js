// nodejs_bot/bot.js

const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');
const path = require('path');

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
// API –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —ç—Ç–æ–º—É –∞–¥—Ä–µ—Å—É. 127.0.0.1 - —ç—Ç–æ localhost.
const PYTHON_API_URL = 'http://127.0.0.1:18361/video_data';
const TOKEN_PATH = path.join(__dirname, 'token.txt');

// --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ---
const log = (message) => {
    console.log(`[${new Date().toLocaleString('ru-RU')}] ${message}`);
};

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —á—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ ---
if (!fs.existsSync(TOKEN_PATH)) {
    log('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –§–∞–π–ª token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    log('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª token.txt –≤ –ø–∞–ø–∫–µ nodejs_bot –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ–≥–æ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞.');
    process.exit(1);
}
const token = fs.readFileSync(TOKEN_PATH, 'utf8').trim();
if (!token) {
    log('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –§–∞–π–ª token.txt –ø—É—Å—Ç!');
    process.exit(1);
}

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
const bot = new TelegramBot(token, { polling: true });
log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');

// --- –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π ---
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    if (!text) return;

    // –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ TikTok –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
    const tiktokUrlRegex = /(https?:\/\/(?:www\.)?(?:m|vt|vm)\.tiktok\.com\/[^\s]+)/;
    const match = text.match(tiktokUrlRegex);

    if (match && match[0]) {
        const tiktokUrl = match[0];
        log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Å—ã–ª–∫–∞: ${tiktokUrl} –≤ —á–∞—Ç–µ ${chatId}`);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        const waitingMessage = await bot.sendMessage(chatId, '‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É...', {
            reply_to_message_id: msg.message_id
        });

        try {
            // --- –í—ã–∑–æ–≤ Python API ---
            // –ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä 'original_url', –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç API
            const response = await axios.get(PYTHON_API_URL, {
                params: {
                    original_url: tiktokUrl
                },
                timeout: 120000 // –¢–∞–π–º-–∞—É—Ç 2 –º–∏–Ω—É—Ç—ã, —Ç–∞–∫ –∫–∞–∫ API –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ª–≥–æ
            });

            const { metadata, videoBase64 } = response.data;
            log(`–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç API –¥–ª—è —á–∞—Ç–∞ ${chatId}`);

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∏–¥–µ–æ
            const stats = metadata.statistics;
            const videoDetails = metadata.video_details;
            const shazam = metadata.shazam;

            let caption = `<b>–ê–≤—Ç–æ—Ä:</b> <a href="https://www.tiktok.com/@${metadata.author.uniqueId}">${metadata.author.nickname}</a>\n`;
            if (metadata.description) {
                caption += `<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${metadata.description}\n\n`;
            }

            caption += `<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n`;
            caption += `  ‚ù§Ô∏è –õ–∞–π–∫–∏: ${stats.diggCount?.toLocaleString('ru-RU') || 0}\n`;
            caption += `  üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${stats.commentCount?.toLocaleString('ru-RU') || 0}\n`;
            caption += `  üîÅ –†–µ–ø–æ—Å—Ç—ã: ${stats.shareCount?.toLocaleString('ru-RU') || 0}\n`;
            caption += `  ‚ñ∂Ô∏è –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${stats.playCount?.toLocaleString('ru-RU') || 0}\n\n`;

            if (shazam && shazam.title) {
                 caption += `<b>üéµ –ú—É–∑—ã–∫–∞ (Shazam):</b> ${shazam.artist} - ${shazam.title}\n`;
            } else {
                 caption += `<b>üéµ –ú—É–∑—ã–∫–∞:</b> ${metadata.music.title} - ${metadata.music.authorName}\n`;
            }

            caption += `\n<b>‚öôÔ∏è –î–µ—Ç–∞–ª–∏ –≤–∏–¥–µ–æ:</b> ${videoDetails.resolution}, ${videoDetails.size_mb}`;

            // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –≤–∏–¥–µ–æ –∏–∑ base64
            const videoBuffer = Buffer.from(videoBase64, 'base64');

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            await bot.sendVideo(chatId, videoBuffer, {
                caption: caption,
                parse_mode: 'HTML'
            });

            // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü–æ–¥–æ–∂–¥–∏—Ç–µ..."
            await bot.deleteMessage(chatId, waitingMessage.message_id);
            log(`–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç ${chatId}`);

        } catch (error) {
            log(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
            let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. üò•';

            if (error.response) {
                // –û—à–∏–±–∫–∞ –ø—Ä–∏—à–ª–∞ –æ—Ç API
                log(`–û—à–∏–±–∫–∞ –æ—Ç API: ${JSON.stringify(error.response.data, null, 2)}`);
                const apiErrorDetail = error.response.data.detail;
                if (typeof apiErrorDetail === 'string' && apiErrorDetail.includes("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏")) {
                    errorMessage = '–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ä–∞–±–æ—á—É—é —Å—Å—ã–ª–∫—É –Ω–∞ TikTok. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é.';
                } else {
                    errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ. üò•';
                }
            } else {
                // –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ —Ç–∞–π–º-–∞—É—Ç
                log(`–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ —Ç–∞–π–º-–∞—É—Ç: ${error.message}`);
                 errorMessage = '–°–µ—Ä–≤–µ—Ä —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
            }

            // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–∂–∏–¥–∞–Ω–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await bot.editMessageText(errorMessage, {
                chat_id: chatId,
                message_id: waitingMessage.message_id
            });
        }
    }
});